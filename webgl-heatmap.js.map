{
  "version": 3,
  "file": "webgl-heatmap.js",
  "sourceRoot": "",
  "sources": [
    "webgl-heatmap.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "nukeVendorPrefix = ->\n    if window.WebGLRenderingContext?\n        vendors = ['WEBKIT', 'MOZ', 'MS', 'O']\n        vendorRe = /^WEBKIT_(.*)|MOZ_(.*)|MS_(.*)|O_(.*)/\n\n        getExtension = WebGLRenderingContext.prototype.getExtension\n        WebGLRenderingContext.prototype.getExtension = (name) ->\n            match = name.match vendorRe\n            if match != null\n                name = match[1]\n\n            extobj = getExtension.call @, name\n            if extobj == null\n                for vendor in vendors\n                    extobj = getExtension.call @, vendor + '_' + name\n                    if extobj != null\n                        return extobj\n                return null\n            else\n                return extobj\n\n        getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions\n        WebGLRenderingContext.prototype.getSupportedExtensions = ->\n            supported = getSupportedExtensions.call @\n            result = []\n\n            for extension in supported\n                match = extension.match vendorRe\n                if match != null\n                    extension = match[1]\n\n                if extension not in result\n                    result.push extension\n\n            return result\n\ntextureFloatShims = ->\n    createSourceCanvas = ->\n        canvas = document.createElement 'canvas'\n        canvas.width = 2\n        canvas.height = 2\n        ctx = canvas.getContext '2d'\n        imageData = ctx.getImageData(0, 0, 2, 2)\n        imageData.data.set(new Uint8ClampedArray([\n            0,0,0,0,\n            255,255,255,255,\n            0,0,0,0,\n            255,255,255,255,\n        ]))\n        ctx.putImageData(imageData, 0, 0)\n        return canvas\n\n    createSourceCanvas()\n\n    checkFloatLinear = (gl, sourceType) ->\n        ## drawing program ##\n        program = gl.createProgram()\n        vertexShader = gl.createShader(gl.VERTEX_SHADER)\n        gl.attachShader(program, vertexShader)\n        gl.shaderSource(vertexShader, '''\n            attribute vec2 position;\n            void main(){\n                gl_Position = vec4(position, 0.0, 1.0);\n            }\n        ''')\n\n        gl.compileShader(vertexShader)\n        if not gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)\n            throw gl.getShaderInfoLog(vertexShader)\n\n        fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)\n        gl.attachShader(program, fragmentShader)\n        gl.shaderSource(fragmentShader, '''\n            uniform sampler2D source;\n            void main(){\n                gl_FragColor = texture2D(source, vec2(1.0, 1.0));\n            }\n        ''')\n        gl.compileShader(fragmentShader)\n        if not gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)\n            throw gl.getShaderInfoLog(fragmentShader)\n\n        gl.linkProgram(program)\n        if not gl.getProgramParameter(program, gl.LINK_STATUS)\n            throw gl.getProgramInfoLog(program)\n\n        gl.useProgram(program)\n\n        cleanup = ->\n            gl.deleteShader(fragmentShader)\n            gl.deleteShader(vertexShader)\n            gl.deleteProgram(program)\n            gl.deleteBuffer(buffer)\n            gl.deleteTexture(source)\n            gl.deleteTexture(target)\n            gl.deleteFramebuffer(framebuffer)\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, null)\n            gl.useProgram(null)\n            gl.bindTexture(gl.TEXTURE_2D, null)\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n        ## target FBO ##\n        target = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, target)\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            2, 2,\n            0,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            null,\n        )\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n\n        framebuffer = gl.createFramebuffer()\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer)\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            target,\n            0\n        )\n\n        ## source texture ##\n        sourceCanvas = createSourceCanvas()\n        source = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, source)\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            sourceType,\n            sourceCanvas,\n        )\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n\n        ## create VBO ##\n        vertices = new Float32Array([\n             1,  1,\n            -1,  1,\n            -1, -1,\n\n             1,  1,\n            -1, -1,\n             1, -1,\n        ])\n        buffer = gl.createBuffer()\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\n        positionLoc = gl.getAttribLocation(program, 'position')\n        sourceLoc = gl.getUniformLocation(program, 'source')\n        gl.enableVertexAttribArray(positionLoc)\n        gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0)\n        gl.uniform1i(sourceLoc, 0)\n        gl.drawArrays(gl.TRIANGLES, 0, 6)\n\n        readBuffer = new Uint8Array(4*4)\n        gl.readPixels(0, 0, 2, 2, gl.RGBA, gl.UNSIGNED_BYTE, readBuffer)\n\n        result = Math.abs(readBuffer[0] - 127) < 10\n\n        cleanup()\n        return result\n\n    checkTexture = (gl, targetType) ->\n        target = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, target)\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            2, 2,\n            0,\n            gl.RGBA,\n            targetType,\n            null,\n        )\n\n        if gl.getError() == 0\n            gl.deleteTexture(target)\n            return true\n        else\n            gl.deleteTexture(target)\n            return false\n\n    checkColorBuffer = (gl, targetType) ->\n        target = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, target)\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            2, 2,\n            0,\n            gl.RGBA,\n            targetType,\n            null,\n        )\n\n        framebuffer = gl.createFramebuffer()\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer)\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            target,\n            0\n        )\n\n        check = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n\n        gl.deleteTexture(target)\n        gl.deleteFramebuffer(framebuffer)\n        gl.bindTexture(gl.TEXTURE_2D, null)\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n        if check == gl.FRAMEBUFFER_COMPLETE\n            return true\n        else\n            return false\n\n    shimExtensions = []\n    shimLookup = {}\n    unshimExtensions = []\n\n    checkSupport = ->\n        canvas = document.createElement 'canvas'\n        gl = null\n        try\n            gl = canvas.getContext 'experimental-webgl'\n            if(gl == null)\n                gl = canvas.getContext 'webgl'\n\n        if gl?\n            singleFloatExt = gl.getExtension 'OES_texture_float'\n            if singleFloatExt == null\n                if checkTexture gl, gl.FLOAT\n                    singleFloatTexturing = true\n                    shimExtensions.push 'OES_texture_float'\n                    shimLookup.OES_texture_float = {shim:true}\n                else\n                    singleFloatTexturing = false\n                    unshimExtensions.push 'OES_texture_float'\n            else\n                if checkTexture gl, gl.FLOAT\n                    singleFloatTexturing = true\n                    shimExtensions.push 'OES_texture_float'\n                else\n                    singleFloatTexturing = false\n                    unshimExtensions.push 'OES_texture_float'\n\n            if singleFloatTexturing\n                extobj = gl.getExtension 'WEBGL_color_buffer_float'\n                if extobj == null\n                    if checkColorBuffer gl, gl.FLOAT\n                        shimExtensions.push 'WEBGL_color_buffer_float'\n                        shimLookup.WEBGL_color_buffer_float = {\n                            shim: true\n                            RGBA32F_EXT: 0x8814\n                            RGB32F_EXT: 0x8815\n                            FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211\n                            UNSIGNED_NORMALIZED_EXT: 0x8C17\n                        }\n                    else\n                        unshimExtensions.push 'WEBGL_color_buffer_float'\n                else\n                    if checkColorBuffer gl, gl.FLOAT\n                        shimExtensions.push 'WEBGL_color_buffer_float'\n                    else\n                        unshimExtensions.push 'WEBGL_color_buffer_float'\n\n                extobj = gl.getExtension 'OES_texture_float_linear'\n                if extobj == null\n                    if checkFloatLinear gl, gl.FLOAT\n                        shimExtensions.push 'OES_texture_float_linear'\n                        shimLookup.OES_texture_float_linear = {shim:true}\n                    else\n                        unshimExtensions.push 'OES_texture_float_linear'\n                else\n                    if checkFloatLinear gl, gl.FLOAT\n                        shimExtensions.push 'OES_texture_float_linear'\n                    else\n                        unshimExtensions.push 'OES_texture_float_linear'\n\n            halfFloatExt = gl.getExtension 'OES_texture_half_float'\n            if halfFloatExt == null\n                if checkTexture(gl, 0x8D61)\n                    halfFloatTexturing = true\n                    shimExtensions.push 'OES_texture_half_float'\n                    halfFloatExt = shimLookup.OES_texture_half_float = {\n                        HALF_FLOAT_OES: 0x8D61\n                        shim:true\n                    }\n                else\n                    halfFloatTexturing = false\n                    unshimExtensions.push 'OES_texture_half_float'\n            else\n                if checkTexture(gl, halfFloatExt.HALF_FLOAT_OES)\n                    halfFloatTexturing = true\n                    shimExtensions.push 'OES_texture_half_float'\n                else\n                    halfFloatTexturing = false\n                    unshimExtensions.push 'OES_texture_half_float'\n\n            if halfFloatTexturing\n                extobj = gl.getExtension 'EXT_color_buffer_half_float'\n                if extobj == null\n                    if checkColorBuffer gl, halfFloatExt.HALF_FLOAT_OES\n                        shimExtensions.push 'EXT_color_buffer_half_float'\n                        shimLookup.EXT_color_buffer_half_float = {\n                            shim: true\n                            RGBA16F_EXT: 0x881A\n                            RGB16F_EXT: 0x881B\n                            FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211\n                            UNSIGNED_NORMALIZED_EXT: 0x8C17\n                        }\n                    else\n                        unshimExtensions.push 'EXT_color_buffer_half_float'\n                else\n                    if checkColorBuffer gl, halfFloatExt.HALF_FLOAT_OES\n                        shimExtensions.push 'EXT_color_buffer_half_float'\n                    else\n                        unshimExtensions.push 'EXT_color_buffer_half_float'\n\n                extobj = gl.getExtension 'OES_texture_half_float_linear'\n                if extobj == null\n                    if checkFloatLinear gl, halfFloatExt.HALF_FLOAT_OES\n                        shimExtensions.push 'OES_texture_half_float_linear'\n                        shimLookup.OES_texture_half_float_linear = {shim:true}\n                    else\n                        unshimExtensions.push 'OES_texture_half_float_linear'\n                else\n                    if checkFloatLinear gl, halfFloatExt.HALF_FLOAT_OES\n                        shimExtensions.push 'OES_texture_half_float_linear'\n                    else\n                        unshimExtensions.push 'OES_texture_half_float_linear'\n\n    if window.WebGLRenderingContext?\n        checkSupport()\n\n        unshimLookup = {}\n        for name in unshimExtensions\n            unshimLookup[name] = true\n\n        getExtension = WebGLRenderingContext.prototype.getExtension\n        WebGLRenderingContext.prototype.getExtension = (name) ->\n            extobj = shimLookup[name]\n            if extobj == undefined\n                if unshimLookup[name]\n                    return null\n                else\n                    return getExtension.call @, name\n            else\n                return extobj\n\n        getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions\n        WebGLRenderingContext.prototype.getSupportedExtensions = ->\n            supported = getSupportedExtensions.call(@)\n            result = []\n\n            for extension in supported\n                if unshimLookup[extension] == undefined\n                    result.push(extension)\n\n            for extension in shimExtensions\n                if extension not in result\n                    result.push extension\n\n            return result\n\n        WebGLRenderingContext.prototype.getFloatExtension = (spec) ->\n            spec.prefer ?= ['half']\n            spec.require ?= []\n            spec.throws ?= true\n\n            singleTexture = @getExtension 'OES_texture_float'\n            halfTexture = @getExtension 'OES_texture_half_float'\n            singleFramebuffer = @getExtension 'WEBGL_color_buffer_float'\n            halfFramebuffer = @getExtension 'EXT_color_buffer_half_float'\n            singleLinear = @getExtension 'OES_texture_float_linear'\n            halfLinear = @getExtension 'OES_texture_half_float_linear'\n\n            single = {\n                texture: singleTexture != null\n                filterable: singleLinear != null\n                renderable: singleFramebuffer != null\n                score: 0\n                precision: 'single'\n                half: false\n                single: true\n                type: @FLOAT\n            }\n\n            half = {\n                texture: halfTexture != null\n                filterable: halfLinear != null\n                renderable: halfFramebuffer != null\n                score: 0\n                precision: 'half'\n                half: true\n                single: false\n                type: halfTexture?.HALF_FLOAT_OES ? null\n            }\n\n            candidates = []\n            if single.texture\n                candidates.push(single)\n            if half.texture\n                candidates.push(half)\n\n            result = []\n            for candidate in candidates\n                use = true\n                for name in spec.require\n                    if candidate[name] == false\n                        use = false\n                if use\n                    result.push candidate\n\n            for candidate in result\n                for preference, i in spec.prefer\n                    importance = Math.pow 2, spec.prefer.length - i - 1\n                    if candidate[preference]\n                        candidate.score += importance\n\n            result.sort (a, b) ->\n                if a.score == b.score then 0\n                else if a.score < b.score then 1\n                else if a.score > b.score then -1\n\n            if result.length == 0\n                if spec.throws\n                    throw 'No floating point texture support that is ' + spec.require.join(', ')\n                else\n                    return null\n            else\n                result = result[0]\n                return {\n                    filterable: result.filterable\n                    renderable: result.renderable\n                    type: result.type\n                    precision: result.precision\n                }\n\nnukeVendorPrefix()\ntextureFloatShims()\n\nclass Shader\n    constructor: (@gl, {vertex, fragment}) ->\n        @program    = @gl.createProgram()\n        @vs         = @gl.createShader @gl.VERTEX_SHADER\n        @fs         = @gl.createShader @gl.FRAGMENT_SHADER\n        @gl.attachShader @program, @vs\n        @gl.attachShader @program, @fs\n        @compileShader @vs, vertex\n        @compileShader @fs, fragment\n        @link()\n\n        @value_cache = {}\n        @uniform_cache = {}\n        @attribCache = {}\n\n    attribLocation: (name) ->\n        location = @attribCache[name]\n        if location is undefined\n            location = @attribCache[name] = @gl.getAttribLocation @program, name\n        return location\n\n    compileShader: (shader, source) ->\n        @gl.shaderSource shader, source\n        @gl.compileShader shader\n\n        if not @gl.getShaderParameter shader, @gl.COMPILE_STATUS\n            throw \"Shader Compile Error: #{@gl.getShaderInfoLog(shader)}\"\n\n    link: ->\n        @gl.linkProgram @program\n\n        if not @gl.getProgramParameter @program, @gl.LINK_STATUS\n            throw \"Shader Link Error: #{@gl.getProgramInfoLog(@program)}\"\n\n    use: ->\n        @gl.useProgram @program\n        return @\n\n    uniformLoc: (name) ->\n        location = @uniform_cache[name]\n        if location is undefined\n            location = @uniform_cache[name] = @gl.getUniformLocation @program, name\n        return location\n\n    int: (name, value) ->\n        cached = @value_cache[name]\n        if cached != value\n            @value_cache[name] = value\n            loc = @uniformLoc name\n            @gl.uniform1i loc, value if loc\n        return @\n\n    vec2: (name, a, b) ->\n        loc = @uniformLoc name\n        @gl.uniform2f loc, a, b if loc\n        return @\n\n    float: (name, value) ->\n        cached = @value_cache[name]\n        if cached != value\n            @value_cache[name] = value\n            loc = @uniformLoc name\n            @gl.uniform1f loc, value if loc\n        return @\n\nclass Framebuffer\n    constructor: (@gl) ->\n        @buffer = @gl.createFramebuffer()\n\n    destroy: ->\n        @gl.deleteFRamebuffer @buffer\n\n    bind: ->\n        @gl.bindFramebuffer @gl.FRAMEBUFFER, @buffer\n        return @\n\n    unbind: ->\n        @gl.bindFramebuffer @gl.FRAMEBUFFER, null\n        return @\n\n    check: ->\n        result = @gl.checkFramebufferStatus @gl.FRAMEBUFFER\n        switch result\n            when @gl.FRAMEBUFFER_UNSUPPORTED\n                throw 'Framebuffer is unsupported'\n            when @gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT\n                throw 'Framebuffer incomplete attachment'\n            when @gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS\n                throw 'Framebuffer incomplete dimensions'\n            when @gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\n                throw 'Framebuffer incomplete missing attachment'\n        return @\n\n    color: (texture) ->\n        @gl.framebufferTexture2D @gl.FRAMEBUFFER, @gl.COLOR_ATTACHMENT0, texture.target, texture.handle, 0\n        @check()\n        return @\n\n    depth: (buffer) ->\n        @gl.framebufferRenderbuffer @gl.FRAMEBUFFER, @gl.DEPTH_ATTACHMENT, @gl.RENDERBUFFER, buffer.id\n        @check()\n        return @\n\n    destroy: ->\n        @gl.deleteFramebuffer @buffer\n\nclass Texture\n    constructor: (@gl, params={}) ->\n        @channels = @gl[(params.channels ? 'rgba').toUpperCase()]\n\n        if typeof(params.type) == 'number'\n            @type = params.type\n        else\n            @type = @gl[(params.type ? 'unsigned_byte').toUpperCase()]\n\n        switch @channels\n            when @gl.RGBA then @chancount = 4\n            when @gl.RGB then @chancount = 3\n            when @gl.LUMINANCE_ALPHA then @chancount = 2\n            else @chancount = 1\n\n        @target = @gl.TEXTURE_2D\n        @handle = @gl.createTexture()\n\n    destroy: ->\n        @gl.deleteTexture @handle\n\n    bind: (unit=0) ->\n        if unit > 15\n            throw 'Texture unit too large: ' + unit\n\n        @gl.activeTexture @gl.TEXTURE0+unit\n        @gl.bindTexture @target, @handle\n\n        return @\n\n    setSize: (@width, @height) ->\n        @gl.texImage2D @target, 0, @channels, @width, @height, 0, @channels, @type, null\n        return @\n\n    upload: (data) ->\n        @width = data.width\n        @height = data.height\n\n        @gl.texImage2D @target, 0, @channels, @channels, @type, data\n        return @\n\n    linear: ->\n        @gl.texParameteri @target, @gl.TEXTURE_MAG_FILTER, @gl.LINEAR\n        @gl.texParameteri @target, @gl.TEXTURE_MIN_FILTER, @gl.LINEAR\n        return @\n\n    nearest: ->\n        @gl.texParameteri @target, @gl.TEXTURE_MAG_FILTER, @gl.NEAREST\n        @gl.texParameteri @target, @gl.TEXTURE_MIN_FILTER, @gl.NEAREST\n        return @\n\n    clampToEdge: ->\n        @gl.texParameteri @target, @gl.TEXTURE_WRAP_S, @gl.CLAMP_TO_EDGE\n        @gl.texParameteri @target, @gl.TEXTURE_WRAP_T, @gl.CLAMP_TO_EDGE\n        return @\n\n    repeat: ->\n        @gl.texParameteri @target, @gl.TEXTURE_WRAP_S, @gl.REPEAT\n        @gl.texParameteri @target, @gl.TEXTURE_WRAP_T, @gl.REPEAT\n        return @\n\nclass Node\n    constructor: (@gl, @width, @height) ->\n        floatExt = @gl.getFloatExtension require: ['renderable']\n        @texture = new Texture(@gl, type:floatExt.type).bind(0).setSize(@width, @height).nearest().clampToEdge()\n        @fbo = new Framebuffer(@gl).bind().color(@texture).unbind()\n\n    use: -> @fbo.bind()\n    bind: (unit) -> @texture.bind(unit)\n    end: -> @fbo.unbind()\n\n    resize: (@width, @height) ->\n        @texture.bind(0).setSize(@width, @height)\n\nvertexShaderBlit = '''\n    attribute vec4 position;\n    varying vec2 texcoord;\n    void main(){\n        texcoord = position.xy*0.5+0.5;\n        gl_Position = position;\n    }\n'''\n\nfragmentShaderBlit = '''\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n        precision highp int;\n        precision highp float;\n    #else\n        precision mediump int;\n        precision mediump float;\n    #endif\n    uniform sampler2D source;\n    varying vec2 texcoord;\n'''\n\nclass Heights\n    constructor: (@heatmap, @gl, @width, @height) ->\n        @shader = new Shader @gl,\n            vertex: '''\n                attribute vec4 position, intensity;\n                varying vec2 off, dim;\n                varying float vIntensity;\n                uniform vec2 viewport;\n\n                void main(){\n                    dim = abs(position.zw);\n                    off = position.zw;\n                    vec2 pos = position.xy + position.zw;\n                    vIntensity = intensity.x;\n                    gl_Position = vec4((pos/viewport)*2.0-1.0, 0.0, 1.0);\n                }\n            '''\n            fragment: '''\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp int;\n                    precision highp float;\n                #else\n                    precision mediump int;\n                    precision mediump float;\n                #endif\n                varying vec2 off, dim;\n                varying float vIntensity;\n                void main(){\n                    float falloff = (1.0 - smoothstep(0.0, 1.0, length(off/dim)));\n                    float intensity = falloff*vIntensity;\n                    gl_FragColor = vec4(intensity);\n                }\n            '''\n\n        @clampShader = new Shader @gl,\n            vertex: vertexShaderBlit\n            fragment: fragmentShaderBlit + '''\n                uniform float low, high;\n                void main(){\n                    gl_FragColor = vec4(clamp(texture2D(source, texcoord).rgb, low, high), 1.0);\n                }\n            '''\n\n        @multiplyShader = new Shader @gl,\n            vertex: vertexShaderBlit\n            fragment: fragmentShaderBlit + '''\n                uniform float value;\n                void main(){\n                    gl_FragColor = vec4(texture2D(source, texcoord).rgb*value, 1.0);\n                }\n            '''\n\n        @blurShader = new Shader @gl,\n            vertex: vertexShaderBlit\n            fragment: fragmentShaderBlit + '''\n                uniform vec2 viewport;\n                void main(){\n                    vec4 result = vec4(0.0);\n                    for(int x=-1; x<=1; x++){\n                        for(int y=-1; y<=1; y++){\n                            vec2 off = vec2(x,y)/viewport;\n                            //float factor = 1.0 - smoothstep(0.0, 1.5, length(off));\n                            float factor = 1.0;\n                            result += vec4(texture2D(source, texcoord+off).rgb*factor, factor);\n                        }\n                    }\n                    gl_FragColor = vec4(result.rgb/result.w, 1.0);\n                }\n            '''\n\n        @nodeBack = new Node @gl, @width, @height\n        @nodeFront = new Node @gl, @width, @height\n\n        @vertexBuffer = @gl.createBuffer()\n        @vertexSize = 8\n        @maxPointCount = 1024*10\n        @vertexBufferData = new Float32Array @maxPointCount*@vertexSize*6\n        @vertexBufferViews = []\n        for i in [0...@maxPointCount]\n            @vertexBufferViews.push new Float32Array(@vertexBufferData.buffer, 0, i*@vertexSize*6)\n\n        @bufferIndex = 0\n        @pointCount = 0\n\n    resize: (@width, @height) ->\n        @nodeBack.resize @width, @height\n        @nodeFront.resize @width, @height\n\n    update: ->\n        if @pointCount > 0\n            @gl.enable @gl.BLEND\n\n            @nodeFront.use()\n\n            @gl.bindBuffer @gl.ARRAY_BUFFER, @vertexBuffer\n            @gl.bufferData @gl.ARRAY_BUFFER, @vertexBufferViews[@pointCount], @gl.STREAM_DRAW\n\n            positionLoc = @shader.attribLocation('position')\n            intensityLoc = @shader.attribLocation('intensity')\n\n            @gl.enableVertexAttribArray 1\n            @gl.vertexAttribPointer(positionLoc, 4, @gl.FLOAT, false, 8*4, 0*4)\n            @gl.vertexAttribPointer(intensityLoc, 4, @gl.FLOAT, false, 8*4, 4*4)\n            @shader.use().vec2('viewport', @width, @height)\n            @gl.drawArrays @gl.TRIANGLES, 0, @pointCount*6\n            @gl.disableVertexAttribArray 1\n\n            @pointCount = 0\n            @bufferIndex = 0\n\n            @nodeFront.end()\n            @gl.disable @gl.BLEND\n\n    clear: ->\n        @nodeFront.use()\n        @gl.clearColor(0,0,0,1)\n        @gl.clear(@gl.COLOR_BUFFER_BIT)\n        @nodeFront.end()\n\n    clamp: (min, max) ->\n        @gl.bindBuffer @gl.ARRAY_BUFFER, @heatmap.quad\n        @gl.vertexAttribPointer(0, 4, @gl.FLOAT, false, 0, 0)\n        @nodeFront.bind(0)\n        @nodeBack.use()\n        @clampShader.use().int('source', 0).float('low', min).float('high', max)\n        @gl.drawArrays @gl.TRIANGLES, 0, 6\n        @nodeBack.end()\n        @swap()\n\n    multiply: (value) ->\n        @gl.bindBuffer @gl.ARRAY_BUFFER, @heatmap.quad\n        @gl.vertexAttribPointer(0, 4, @gl.FLOAT, false, 0, 0)\n        @nodeFront.bind(0)\n        @nodeBack.use()\n        @multiplyShader.use().int('source', 0).float('value', value)\n        @gl.drawArrays @gl.TRIANGLES, 0, 6\n        @nodeBack.end()\n        @swap()\n\n    blur: ->\n        @gl.bindBuffer @gl.ARRAY_BUFFER, @heatmap.quad\n        @gl.vertexAttribPointer(0, 4, @gl.FLOAT, false, 0, 0)\n        @nodeFront.bind(0)\n        @nodeBack.use()\n        @blurShader.use().int('source', 0).vec2('viewport', @width, @height)\n        @gl.drawArrays @gl.TRIANGLES, 0, 6\n        @nodeBack.end()\n        @swap()\n\n    swap: ->\n        tmp = @nodeFront\n        @nodeFront = @nodeBack\n        @nodeBack = tmp\n\n    addVertex: (x, y, xs, ys, intensity) ->\n        @vertexBufferData[@bufferIndex++] = x\n        @vertexBufferData[@bufferIndex++] = y\n        @vertexBufferData[@bufferIndex++] = xs\n        @vertexBufferData[@bufferIndex++] = ys\n        @vertexBufferData[@bufferIndex++] = intensity\n        @vertexBufferData[@bufferIndex++] = intensity\n        @vertexBufferData[@bufferIndex++] = intensity\n        @vertexBufferData[@bufferIndex++] = intensity\n\n    addPoint: (x, y, size=50, intensity=0.2) ->\n        if @pointCount >= @maxPointCount - 1\n            @update()\n\n        #if @pointCount < @maxPointCount\n        y = @height - y\n        s = size/2\n        @addVertex x, y, -s, -s, intensity\n        @addVertex x, y, +s, -s, intensity\n        @addVertex x, y, -s, +s, intensity\n\n        @addVertex x, y, -s, +s, intensity\n        @addVertex x, y, +s, -s, intensity\n        @addVertex x, y, +s, +s, intensity\n\n        @pointCount += 1\n\nmodule.exports = class WebGLHeatmap\n    constructor: ({@canvas, @width, @height, intensityToAlpha, gradientTexture, alphaRange}={}) ->\n        @canvas = document.createElement('canvas') unless @canvas\n        try\n            @gl = @canvas.getContext('experimental-webgl', depth:false, antialias:false)\n            if @gl == null\n                @gl = @canvas.getContext('webgl', depth:false, antialias:false)\n                if @gl == null\n                    throw 'WebGL not supported'\n        catch error\n            throw 'WebGL not supported'\n\n        if window.WebGLDebugUtils?\n            console.log 'debugging mode'\n            @gl = WebGLDebugUtils.makeDebugContext @gl, (err, funcName, args) ->\n                throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName\n\n        @gl.enableVertexAttribArray 0\n        @gl.blendFunc @gl.ONE, @gl.ONE\n\n        if gradientTexture\n            textureGradient = @gradientTexture = new Texture(@gl, channels:'rgba').bind(0).setSize(2, 2).nearest().clampToEdge()\n            if typeof gradientTexture == 'string'\n                image = new Image()\n                image.onload = ->\n                    textureGradient.bind().upload(image)\n                image.src = gradientTexture\n            else\n                if gradientTexture.width > 0 and gradientTexture.height > 0\n                    textureGradient.upload(gradientTexture)\n                else\n                    gradientTexture.onload = ->\n                        textureGradient.upload(gradientTexture)\n\n            getColorFun = '''\n                uniform sampler2D gradientTexture;\n                vec3 getColor(float intensity){\n                    return texture2D(gradientTexture, vec2(intensity, 0.0)).rgb;\n                }\n            '''\n        else\n            textureGradient = null\n            getColorFun = '''\n                vec3 getColor(float intensity){\n                    vec3 blue = vec3(0.0, 0.0, 1.0);\n                    vec3 cyan = vec3(0.0, 1.0, 1.0);\n                    vec3 green = vec3(0.0, 1.0, 0.0);\n                    vec3 yellow = vec3(1.0, 1.0, 0.0);\n                    vec3 red = vec3(1.0, 0.0, 0.0);\n\n                    vec3 color = (\n                        fade(-0.25, 0.25, intensity)*blue +\n                        fade(0.0, 0.5, intensity)*cyan +\n                        fade(0.25, 0.75, intensity)*green +\n                        fade(0.5, 1.0, intensity)*yellow +\n                        smoothstep(0.75, 1.0, intensity)*red\n                    );\n                    return color;\n                }\n            '''\n\n        intensityToAlpha ?= true\n\n        if intensityToAlpha\n            [alphaStart, alphaEnd] = alphaRange ? [0,1]\n            output = \"\"\"\n                vec4 alphaFun(vec3 color, float intensity){\n                    float alpha = smoothstep(#{alphaStart.toFixed(8)}, #{alphaEnd.toFixed(8)}, intensity);\n                    return vec4(color*alpha, alpha);\n                }\n            \"\"\"\n        else\n            output = '''\n                vec4 alphaFun(vec3 color, float intensity){\n                    return vec4(color, 1.0);\n                }\n            '''\n\n        @shader = new Shader @gl,\n            vertex: vertexShaderBlit\n            fragment: fragmentShaderBlit + \"\"\"\n                float linstep(float low, float high, float value){\n                    return clamp((value-low)/(high-low), 0.0, 1.0);\n                }\n\n                float fade(float low, float high, float value){\n                    float mid = (low+high)*0.5;\n                    float range = (high-low)*0.5;\n                    float x = 1.0 - clamp(abs(mid-value)/range, 0.0, 1.0);\n                    return smoothstep(0.0, 1.0, x);\n                }\n\n                #{getColorFun}\n                #{output}\n\n                void main(){\n                    float intensity = smoothstep(0.0, 1.0, texture2D(source, texcoord).r);\n                    vec3 color = getColor(intensity);\n                    gl_FragColor = alphaFun(color, intensity);\n                }\n            \"\"\"\n\n        @width ?= @canvas.offsetWidth or 2\n        @height ?= @canvas.offsetHeight or 2\n        @canvas.width = @width\n        @canvas.height = @height\n        @gl.viewport(0, 0, @width, @height)\n\n        @quad = @gl.createBuffer()\n        @gl.bindBuffer @gl.ARRAY_BUFFER, @quad\n        quad = new Float32Array([\n            -1, -1, 0, 1,\n            1, -1, 0, 1,\n            -1, 1, 0, 1,\n\n            -1, 1, 0, 1,\n            1, -1, 0, 1,\n            1, 1, 0, 1,\n        ])\n        @gl.bufferData @gl.ARRAY_BUFFER, quad, @gl.STATIC_DRAW\n        @gl.bindBuffer @gl.ARRAY_BUFFER, null\n\n        @heights = new Heights @, @gl, @width, @height\n\n    adjustSize: ->\n        canvasWidth = @canvas.offsetWidth or 2\n        canvasHeight = @canvas.offsetHeight or 2\n\n        if @width isnt canvasWidth or @height isnt canvasHeight\n            @gl.viewport 0, 0, canvasWidth, canvasHeight\n            @canvas.width = canvasWidth\n            @canvas.height = canvasHeight\n            @width = canvasWidth\n            @height = canvasHeight\n            @heights.resize @width, @height\n\n    display: ->\n        @gl.bindBuffer @gl.ARRAY_BUFFER, @quad\n        @gl.vertexAttribPointer(0, 4, @gl.FLOAT, false, 0, 0)\n        @heights.nodeFront.bind(0)\n        if @gradientTexture\n            @gradientTexture.bind(1)\n        @shader.use().int('source', 0).int('gradientTexture', 1)\n        @gl.drawArrays @gl.TRIANGLES, 0, 6\n\n    update: ->\n        @heights.update()\n\n    clear: -> @heights.clear()\n    clamp: (min=0, max=1) -> @heights.clamp(min, max)\n    multiply: (value=0.95) -> @heights.multiply(value)\n    blur: -> @heights.blur()\n\n    addPoint: (x, y, size, intensity) -> @heights.addPoint x, y, size, intensity\n    addPoints: (items) -> (@addPoint item.x, item.y, item.size, item.intensity for item in items)\n\nwindow.createWebGLHeatmap = (params) -> new WebGLHeatmap(params)\n"
  ]
}